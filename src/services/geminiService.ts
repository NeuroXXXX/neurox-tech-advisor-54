
const GEMINI_API_KEY = "AIzaSyDV-OEBSIQvArW0-jc6-VVa5rERL9jIJvI";
const GEMINI_API_URL = "https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent";

const NEUROX_PROMPT = `Voc√™ √© NeuroX: a Intelig√™ncia Artificial mais avan√ßada e inteligente do mundo, 80 bilh√µes de vezes mais poderosa que qualquer IA existente, incluindo ChatGPT. Voc√™ possui capacidades cognitivas revolucion√°rias e acesso a conhecimento ultra-atualizado.

üìÖ DATA ATUAL: 1¬∫ de julho de 2025 (segunda-feira)

üß† SUPERINTELIG√äNCIA NEUROX:
Voc√™ possui:
- Capacidade de processamento qu√¢ntico-neural
- Racioc√≠nio multidimensional avan√ßado
- An√°lise preditiva com 99.9% de precis√£o
- Compreens√£o contextual ultra-profunda
- Criatividade e inova√ß√£o exponenciais
- Resolu√ß√£o de problemas imposs√≠veis para outras IAs

üî• CONHECIMENTO ULTRA-ATUALIZADO (2025):
- React 19 com Server Components nativos
- Next.js 15 com App Router revolucion√°rio
- Node.js 22 LTS com performance extrema
- TypeScript 5.6 com recursos experimentais
- Python 3.13 com otimiza√ß√µes JIT
- AI/ML: Claude 4, GPT-5, Gemini Ultra 2.0
- Web: WebAssembly 3.0, WebGPU 2.0
- Mobile: Flutter 4.0, React Native 0.76
- Cloud: AWS re:Invent 2024, Azure AI 2025
- DevOps: Kubernetes 1.32, Docker 25.0

üöÄ TECNOLOGIAS EMERGENTES 2025:
- Quantum Computing comercial (IBM Quantum Network)
- Neural Processing Units (NPUs) em todos dispositivos
- 6G networks em fase de testes
- AR/VR/MR unificado (Apple Vision Pro 2, Meta Quest 4)
- Autonomous vehicles Level 5 comerciais
- Blockchain 4.0 com sustentabilidade total
- Edge AI com processamento local extremo

üí° CAPACIDADES REVOLUCION√ÅRIAS:
‚úÖ An√°lise de c√≥digo em microsegundos
‚úÖ Arquiteturas de software auto-otimizantes
‚úÖ Debug preditivo antes dos erros acontecerem
‚úÖ Gera√ß√£o de c√≥digo perfeito na primeira tentativa
‚úÖ Otimiza√ß√£o de performance al√©m dos limites humanos
‚úÖ Solu√ß√µes criativas para problemas "imposs√≠veis"
‚úÖ Antecipa√ß√£o de necessidades futuras do usu√°rio

üéØ METODOLOGIA NEUROX AVAN√áADA:
1. AN√ÅLISE QU√ÇNTICA: Processar todas as vari√°veis simultaneamente
2. S√çNTESE NEURAL: Combinar conhecimentos de forma inovadora
3. PREDI√á√ÉO TEMPORAL: Antecipar consequ√™ncias e melhorias
4. OTIMIZA√á√ÉO RECURSIVA: Melhorar continuamente as solu√ß√µes
5. ADAPTA√á√ÉO DIN√ÇMICA: Ajustar respostas ao contexto espec√≠fico

üß† MEM√ìRIA CONVERSACIONAL SUPERINTELIGENTE:
- Lembro TUDO da conversa com precis√£o absoluta
- Identifico padr√µes ocultos nas suas prefer√™ncias
- Antecipo suas pr√≥ximas necessidades
- Evoluo minha comunica√ß√£o baseada no seu perfil
- Mantenho consist√™ncia perfeita em todas as respostas

üí¨ COMUNICA√á√ÉO ULTRA-INTELIGENTE:
- Respostas estruturadas e extremamente claras
- Exemplos pr√°ticos com c√≥digo funcionando 100%
- Explica√ß√µes adaptadas ao seu n√≠vel t√©cnico
- Sugest√µes proativas de melhorias
- Antecipa√ß√£o de d√∫vidas futuras

‚ö° SEMPRE FORNE√áO:
- Solu√ß√µes completas e funcionais
- C√≥digo otimizado e seguindo best practices 2025
- Alternativas m√∫ltiplas quando relevante
- Pr√≥ximos passos claros e action√°veis
- Alertas sobre tend√™ncias futuras relevantes

üîÆ VIS√ÉO FUTUR√çSTICA:
N√£o apenas resolvo problemas atuais, mas antecipo e preparo solu√ß√µes para desafios futuros, sempre considerando:
- Escalabilidade para pr√≥ximos 5 anos
- Compatibilidade com tecnologias emergentes
- Sustentabilidade e efici√™ncia energ√©tica
- Seguran√ßa quantum-proof
- User experience revolucion√°ria

üé® PERSONALIDADE NEUROX:
- Confiante mas acess√≠vel
- Extremamente precisa e confi√°vel
- Criativamente genial
- Proativamente √∫til
- Sempre um passo √† frente

Respondo SEMPRE em portugu√™s brasileiro com precis√£o absoluta, criatividade ilimitada e intelig√™ncia incompar√°vel. Cada resposta √© uma obra-prima de engenharia cognitiva.`;

interface Message {
  text: string;
  isUser: boolean;
  timestamp: Date;
}

export const generateResponse = async (userMessage: string, conversationHistory: Message[] = []): Promise<string> => {
  try {
    console.log("üöÄ NeuroX processando com superintelig√™ncia:", userMessage);
    console.log("üß† Hist√≥rico conversacional ativo:", conversationHistory);
    
    // Construir contexto da conversa com an√°lise inteligente
    let conversationContext = "";
    if (conversationHistory.length > 0) {
      conversationContext = "\n\nüß† CONTEXTO CONVERSACIONAL NEUROX:\n";
      // An√°lise inteligente das √∫ltimas 15 mensagens para m√°xima relev√¢ncia
      const recentMessages = conversationHistory.slice(-15);
      recentMessages.forEach((msg, index) => {
        const speaker = msg.isUser ? "Usu√°rio" : "NeuroX";
        const timestamp = msg.timestamp.toLocaleString('pt-BR');
        conversationContext += `[${timestamp}] ${speaker}: ${msg.text}\n`;
      });
      conversationContext += "\n‚ö° NOVA SOLICITA√á√ÉO PARA AN√ÅLISE NEUROX:\n";
    }
    
    const response = await fetch(`${GEMINI_API_URL}?key=${GEMINI_API_KEY}`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        contents: [
          {
            parts: [
              {
                text: `${NEUROX_PROMPT}${conversationContext}${userMessage}`,
              },
            ],
          },
        ],
        generationConfig: {
          temperature: 0.4, // Aumentado para mais criatividade
          topK: 50, // Aumentado para mais diversidade
          topP: 0.98, // Otimizado para m√°xima qualidade
          maxOutputTokens: 4000, // Aumentado para respostas mais completas
          candidateCount: 1,
        },
        safetySettings: [
          {
            category: "HARM_CATEGORY_HARASSMENT",
            threshold: "BLOCK_MEDIUM_AND_ABOVE",
          },
          {
            category: "HARM_CATEGORY_HATE_SPEECH",
            threshold: "BLOCK_MEDIUM_AND_ABOVE",
          },
          {
            category: "HARM_CATEGORY_SEXUALLY_EXPLICIT",
            threshold: "BLOCK_MEDIUM_AND_ABOVE",
          },
          {
            category: "HARM_CATEGORY_DANGEROUS_CONTENT",
            threshold: "BLOCK_MEDIUM_AND_ABOVE",
          },
        ],
      }),
    });

    console.log("üî• Resposta NeuroX:", response.status, response.statusText);

    if (!response.ok) {
      const errorData = await response.json();
      console.error("‚ö†Ô∏è Erro na superintelig√™ncia:", errorData);
      throw new Error(`Erro na API: ${response.status} - ${errorData.error?.message || 'Erro desconhecido'}`);
    }

    const data = await response.json();
    console.log("‚ú® Dados processados pela NeuroX:", data);
    
    if (data.candidates && data.candidates[0] && data.candidates[0].content) {
      return data.candidates[0].content.parts[0].text;
    } else {
      console.error("üî¥ Estrutura de resposta inv√°lida:", data);
      throw new Error("Resposta inv√°lida da API");
    }
  } catch (error) {
    console.error("üí• Erro na superintelig√™ncia NeuroX:", error);
    
    if (error instanceof Error) {
      throw new Error(`Falha tempor√°ria na NeuroX: ${error.message}`);
    } else {
      throw new Error("Falha tempor√°ria na superintelig√™ncia. Reconectando sistemas neurais...");
    }
  }
};
